import { FakeCreator } from './fakeUser.entity';
import { UserSelfGenderEnum, UserInterestedGenderEnum, IUserParams, type IUser, SocialProviderEnum, UserStatusEnum, UserRoleEnum } from './../../../../libs/types/src/db/entities/user';
import { CustomerProfileData } from './customer.profiledata.entity';
import { UserAccountTransaction } from './user.account.transaction.entity';
import { VisitProfile } from './visit.profile.entity';
import { Favorite } from './customer.favourite.entity';
import { Address } from './user.address.entity';
import { Block } from './user.block.entity';
import { Photo } from './user.photos.entity';
import { Payments } from 'src/modules/payments/entities/payment.entity';
import { FallOutUsers } from './user.fallout.entity';
import { UserBonusCode } from 'src/modules/auth/entities/userBonusCode.entity';
import { ContactSupport } from './contactSupport.entity';
import { Notifications } from './notifications.entity';
export declare class User implements IUser {
    constructor(params?: IUserParams);
    readonly id: string;
    firstName: string;
    lastName: string;
    userName: string;
    email: string;
    password?: string;
    SocialProvider?: SocialProviderEnum;
    status: UserStatusEnum;
    role: UserRoleEnum;
    selfGender: UserSelfGenderEnum;
    interestedGender: UserInterestedGenderEnum;
    online: boolean;
    disable: boolean;
    readonly createdAt: Date;
    readonly updatedAt: Date;
    profile: CustomerProfileData;
    address: Address;
    transaction: UserAccountTransaction;
    contactSupport: ContactSupport;
    visits: VisitProfile;
    notifications: Notifications;
    blocked: Block;
    favorite: Favorite;
    photos: Photo[];
    payments: Payments;
    fakes: FakeCreator;
    fallOutFakes: FallOutUsers;
    fallOutUsers: FallOutUsers;
    bonus: FallOutUsers;
    usedBonusCodes: UserBonusCode[];
    setStatus(status: UserStatusEnum): void;
    setRole(role: UserRoleEnum): void;
    setPassword(password: string): void;
    setEmail(email: string): void;
    setSelfGender(selfGender: UserSelfGenderEnum): void;
    setFirstName(firstName: string): void;
    setUserName(userName: string): void;
    setLastName(lastName: string): void;
}
